spring:
  application:
    name: RECRUITMENT-SERVICE
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  liquibase:
    enabled: true
    change-log: db.changelog/changelog.xml
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    producer:
      bootstrap-servers: localhost:9092,localhost:9094
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 10
      properties:
        delivery.timeout.ms: 20000
        linger.ms: 0
        request.timeout.ms: 10000
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
        transaction-id-prefix: transfer-service-${random.value}
    consumer:
      bootstrap-servers: localhost:9092,localhost:9094,localhost:9096
      group-id: my-consumer-group
      auto-offset-reset: earliest
      enable-auto-commit: true
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      isolation-level: read_committed
        
topic:
  accounting-allocate-requests:
    name: accounting-allocate-requests
    partitions: 3
    replicas: 3
    sync: 2
  security-check-requests:
    name: security-check-requests
    partitions: 3
    replicas: 3
    sync: 2
  notification-send-requests:
    name: security-check-requests
    partitions: 3
    replicas: 3
    sync: 2

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

server:
  port: 8082

# springdoc:
#   api-docs:
#     version: OPENAPI_3_0

client:
  feign:
    account-service:
     url: ACCOUNTING-SERVICE
    security-service:
     url: SECURITY-SERVICE

management:
  endpoints:
    web:
      exposure:
        include: mapping,bus-refresh,bus-env,health,circuitbreakerevents,retry
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true


resilience4j:
  circuitbreaker:
    instances:
      accountServiceCircuitBreaker:
        sliding-window-type: COUNT_BASED
        sliding-window-size: 4
        failure-rate-threshold: 50
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        minimum-number-of-calls: 1
        event-consumer-buffer-size: 10
        register-health-indicator: true
        permitted-number-of-calls-in-half-open-state: 3
      securityServiceCircuitBreaker:
        sliding-window-type: COUNT_BASED
        sliding-window-size: 4
        failure-rate-threshold: 50
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        minimum-number-of-calls: 1
        event-consumer-buffer-size: 10
        register-health-indicator: true
        permitted-number-of-calls-in-half-open-state: 3
      
    circuit-breaker-aspect-order: 1
  retry:
    retry-aspect-order: 2
    instances:
      accountServiceRetry:
        max-attempts: 2
        wait-duration: 1000
      securityServiceRetry:
        max-attempts: 2
        wait-duration: 1000



